workload:
  image:
    repository: traefik
    tag: v3.3.3
  args:
    # Entrypoints
    - '--entryPoints.internalweb.address=:80/tcp'
    - '--entryPoints.externalweb.address=:81/tcp'
    - '--entryPoints.internalwebsecure.address=:443/tcp'
    - '--entryPoints.externalwebsecure.address=:444/tcp'
    - '--entryPoints.traefik.address=:8080/tcp'
    - '--entryPoints.ping.address=:8082/tcp'
    - '--entryPoints.metrics.address=:9100/tcp'
    # TLS
    - '--entryPoints.internalwebsecure.http.tls=true'
    - '--entryPoints.externalwebsecure.http.tls=true'
    # Metrics
    - '--metrics.prometheus=true'
    - '--metrics.prometheus.entrypoint=metrics'
    - '--metrics.addinternals=true'
    # Healthcheck
    - '--ping=true'
    - '--ping.entryPoint=ping'
    # Dashboard
    - '--api=true'
    - '--api.dashboard=true'
    - '--api.insecure=true'
    # Providers
    - "--providers.file.filename=/config/traefik.yaml"
    - '--providers.kubernetesingress=true'
    - '--providers.kubernetesingress.allowemptyservices=true'
    # Logs
    - '--log.level=INFO'
    - '--log.format=json'
    # Access logs
    - '--accesslog=true'
    - '--accesslog.format=json'
    - '--accesslog.addinternals=true'
    - '--accesslog.fields.defaultmode=keep'
    - '--accesslog.fields.headers.defaultmode=drop'
  probes:
    readinessProbe:
      path: "/ping"
      port: 8082
    livenessProbe:
      path: "/ping"
      port: 8082
  storage:
    - name: traefik
      type: configMap
      mountPath: /config
      configMapName: traefik
    - name: letsencrypt-wildcard-certificate
      type: secret
      optional: false
      mountPath: /tls
      secretName: letsencrypt-wildcard-certificate

configMap:
  enabled: true
  configMaps:
    - name: "traefik"
      data:
        traefik.yaml: |
          tls:
            certificates:
              - certFile: /tls/tls.crt
                keyFile: /tls/tls.key
            stores:
              default:
                defaultCertificate:
                  certFile: /tls/tls.crt
                  keyFile: /tls/tls.key

service:
  ports:
    - name: traefik
      port: 8080
      protocol: TCP
    - name: ping
      port: 8082
      protocol: TCP
    - name: http-metrics
      port: 9100
      protocol: TCP

expose:
  enabled: true
  type: NodePort
  ports:
    - name: internalweb
      nodePort: 30080
      port: 80
      protocol: TCP
    - name: externalweb
      nodePort: 30081
      port: 81
      protocol: TCP
    - name: internalwebsecure
      nodePort: 30443
      port: 443
      protocol: TCP
    - name: externalwebsecure
      nodePort: 30444
      port: 444
      protocol: TCP

rbac:
  enabled: true
  roles:
    clusterRole:
      rules:
        - apiGroups:
            - ''
          resources:
            - nodes
          verbs:
            - get
            - list
            - watch
        - apiGroups:
            - ''
          resources:
            - services
          verbs:
            - get
            - list
            - watch
        - apiGroups:
            - discovery.k8s.io
          resources:
            - endpointslices
          verbs:
            - list
            - watch
        - apiGroups:
            - ''
          resources:
            - secrets
          verbs:
            - get
            - list
            - watch
        - apiGroups:
            - extensions
            - networking.k8s.io
          resources:
            - ingressclasses
          verbs:
            - get
            - list
            - watch
        - apiGroups:
            - traefik.io
          resources:
            - ingressroutes
            - ingressroutetcps
            - ingressrouteudps
            - middlewares
            - middlewaretcps
            - serverstransports
            - serverstransporttcps
            - tlsoptions
            - tlsstores
            - traefikservices
          verbs:
            - get
            - list
            - watch
        - apiGroups:
            - extensions
            - networking.k8s.io
          resources:
            - ingressclasses
            - ingresses
          verbs:
            - get
            - list
            - watch
        - apiGroups:
            - extensions
            - networking.k8s.io
          resources:
            - ingresses/status
          verbs:
            - update

ingress:
  enabled: true
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: "internalweb, internalwebsecure"
  hosts:
    - host: traefik.openjamlab.com
      path: /
      pathType: "Prefix"
      tls:
        enabled: true
        secretName: "letsencrypt-wildcard-certificate"
      backend:
        service:
          name: "traefik"
          port: 8080

ingressClass:
  enabled: true
  isDefault: true
  controller: "traefik.io/ingress-controller"

certificate:
  enabled: true
  spec:
    secretName: "letsencrypt-wildcard-certificate"
    dnsNames:
      - 'openjamlab.com'
      - '*.openjamlab.com'
    issuerRef:
      name: "traefik"
      kind: Issuer

issuer:
  enabled: true
  type: Issuer
  spec:
    acme:
      email: "jamiestinson1@icloud.com"
      solvers:
        - dns01:
            cloudflare:
              email: "jamiestinson1@icloud.com"
              apiTokenSecretRef:
                name: cloudflare
                key: API_TOKEN
      server: https://acme-v02.api.letsencrypt.org/directory
      privateKeySecretRef:
        name: letsencrypt-acme-key

grafana:
  dashboard:
    enabled: true
    dashboards:
      - name: traefik
        title: "Traefik"
        url: "https://raw.githubusercontent.com/jamie-stinson/helm-system-monorepo/refs/heads/main/charts/traefik/dashboards/traefik.json"
        folder: "System"
