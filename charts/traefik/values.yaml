workload:
  image:
    repository: "traefik"
    tag: "v3.2.2"
  args:
    - '--entryPoints.metrics.address=:9100/tcp'
    - '--metrics.prometheus=true'
    - '--metrics.prometheus.entrypoint=metrics'
    - '--entryPoints.externalweb.address=:80/tcp'
    - '--entryPoints.externalwebsecure.address=:443/tcp'
    - '--entryPoints.externalwebsecure.http.tls=true'
    - '--entryPoints.internalweb.address=:81/tcp'
    - '--entryPoints.internalwebsecure.address=:444/tcp'
    - '--entryPoints.internalwebsecure.http.tls=true'
    - '--entryPoints.traefik.address=:8080/tcp'
    - '--api=true'
    - '--api.dashboard=true'
    - '--api.insecure=true'
    - '--ping=true'
    - '--providers.kubernetesingress=true'
    - "--providers.kubernetesingress.ingressendpoint.publishedservice=NAMESPACE/TRAEFIK_SVC_NAME"
    - '--log.format=json'
    - '--log.level=INFO'
    - '--accesslog=true'
    - '--accesslog.format=json'
    - '--accesslog.fields.defaultmode=keep'
    - '--accesslog.fields.headers.defaultmode=drop'
  resources:
    preset: "micro"

service:
  ports:
    - name: traefik
      protocol: TCP
      port: 8080
    - name: metrics
      protocol: TCP
      port: 9100

expose:
  enabled: true
  type: NodePort
  ports:
    - name: externalwebsecure
      protocol: TCP
      port: 443
      nodePort: 30443
    - name: externalweb
      protocol: TCP
      port: 80
      nodePort: 30080
    - name: internalwebsecure
      protocol: TCP
      port: 444
      nodePort: 30444
    - name: internalweb
      protocol: TCP
      port: 81
      nodePort: 30081

ingressClass:
  enabled: true
  controller: "traefik.io/ingress-controller"
  isDefault: true

ingress:
  enabled: true
  entryPoints:
    - internalwebsecure
    - internalweb
  port: traefik
  prefix: "traefik"
  tls: true

wildcardCertificate:
  enabled: true
  name: "cloudflare"
  issuer: "cloudflare"

rbac:
  roles:
    clusterRole:
      rules:
        - apiGroups:
            - ''
          resources:
            - nodes
          verbs:
            - get
            - list
            - watch
        - apiGroups:
            - ''
          resources:
            - services
          verbs:
            - get
            - list
            - watch
        - apiGroups:
            - discovery.k8s.io
          resources:
            - endpointslices
          verbs:
            - list
            - watch
        - apiGroups:
            - ''
          resources:
            - secrets
          verbs:
            - get
            - list
            - watch
        - apiGroups:
            - extensions
            - networking.k8s.io
          resources:
            - ingressclasses
          verbs:
            - get
            - list
            - watch
        - apiGroups:
            - traefik.io
          resources:
            - ingressroutes
            - ingressroutetcps
            - ingressrouteudps
            - middlewares
            - middlewaretcps
            - serverstransports
            - serverstransporttcps
            - tlsoptions
            - tlsstores
            - traefikservices
          verbs:
            - get
            - list
            - watch
        - apiGroups:
            - extensions
            - networking.k8s.io
          resources:
            - ingressclasses
            - ingresses
          verbs:
            - get
            - list
            - watch
        - apiGroups:
            - extensions
            - networking.k8s.io
          resources:
            - ingresses/status
          verbs:
            - update
