workload:
  enabled: true
  type: DaemonSet
  image:
    registry: "registry.k8s.io"
    repository: "node-problem-detector/node-problem-detector"
    tag: "v0.8.19"
  command:
    - /bin/sh
    - '-c'
    - >-
      exec /node-problem-detector --logtostderr
      --config.system-log-monitor=/config/kernel-monitor.json 
      --prometheus-address=0.0.0.0 
      --prometheus-port=20257
      --k8s-exporter-heartbeat-period=5m0s
  securityContext:
    allowPrivilegeEscalation: true
    privileged: true
  resources:
    requests:
      cpu: 10m
      memory: 10Mi
  storage:
    - name: log
      type: hostPath
      mountPath: /var/log
      hostPath: /var/log
      readOnly: true
    - name: kmsg
      type: hostPath
      mountPath: /dev/kmsg
      hostPath: /dev/kmsg
      readOnly: true
      type: hostPath
      mountPath: /etc/localtime
      hostPath: /etc/localtime
      readOnly: true
    - name: config
      type: configMap
      mountPath: /config
      configMapName: node-problem-detector-config
      items:
        - key: kernel-monitor.json
          path: kernel-monitor.json
  priorityClassName: "system-node-critical"
  strategy:
    type: RollingUpdate
    minAvailable: 1
    maxUnavailable: 1

pdb:
  enabled: true
  maxUnavailable: "1"

service:
  enabled: true
  type: ClusterIP
  ports:
    - name: metrics
      protocol: TCP
      port: 20257

configMaps:
  - name: config
    enabled: true
    data:
      kernel-monitor.json: |
        {
            "plugin": "kmsg",
            "logPath": "/dev/kmsg",
            "lookback": "5m",
            "bufferSize": 10,
            "source": "kernel-monitor",
            "conditions": [
                {
                    "type": "KernelDeadlock",
                    "reason": "KernelHasNoDeadlock",
                    "message": "kernel has no deadlock"
                },
                {
                    "type": "ReadonlyFilesystem",
                    "reason": "FilesystemIsNotReadOnly",
                    "message": "Filesystem is not read-only"
                }
            ],
            "rules": [
                {
                    "type": "temporary",
                    "reason": "OOMKilling",
                    "pattern": "Kill process \\d+ (.+) score \\d+ or sacrifice child\\nKilled process \\d+ (.+) total-vm:\\d+kB, anon-rss:\\d+kB, file-rss:\\d+kB.*"
                },
                {
                    "type": "temporary",
                    "reason": "TaskHung",
                    "pattern": "task \\S+:\\w+ blocked for more than \\w+ seconds\\."
                },
                {
                    "type": "temporary",
                    "reason": "UnregisterNetDevice",
                    "pattern": "unregister_netdevice: waiting for \\w+ to become free. Usage count = \\d+"
                },
                {
                    "type": "temporary",
                    "reason": "KernelOops",
                    "pattern": "BUG: unable to handle kernel NULL pointer dereference at .*"
                },
                {
                    "type": "temporary",
                    "reason": "KernelOops",
                    "pattern": "divide error: 0000 \\[#\\d+\\] SMP"
                },
                {
              "type": "temporary",
              "reason": "MemoryReadError",
              "pattern": "CE memory read error .*"
                },
                {
                    "type": "permanent",
                    "condition": "KernelDeadlock",
                    "reason": "DockerHung",
                    "pattern": "task docker:\\w+ blocked for more than \\w+ seconds\\."
                },
                {
                    "type": "permanent",
                    "condition": "ReadonlyFilesystem",
                    "reason": "FilesystemIsReadOnly",
                    "pattern": "Remounting filesystem read-only"
                }
            ]
        }

serviceAccount:
  enabled: true
  automountServiceAccountToken: true

rbac:
  enabled: true
  type: ClusterRole
  rules:
    - apiGroups:
        - ''
      resources:
        - nodes
      verbs:
        - get
    - apiGroups:
        - ''
      resources:
        - nodes/status
      verbs:
        - patch
    - apiGroups:
        - ''
      resources:
        - events
      verbs:
        - create
        - patch
        - update
