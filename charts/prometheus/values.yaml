workload:
  image:
    registry: quay.io
    repository: prometheus/prometheus
    tag: v3.1.0
  replicaCount: 1
  args:
    - '--config.file=/etc/config/prometheus.yaml'
    - '--agent'
  resources:
    preset: micro
  storage:
    - configMapName: prometheus
      mountPath: /etc/config
      name: config
      type: configMap

autoscaling:
  enabled: false

service:
  ports:
    - name: http
      port: 9090
      protocol: TCP

configMap:
  enabled: true
  data:
    prometheus.yaml: |
      global:
        scrape_interval: 5s
        evaluation_interval: 5s
        external_labels:
          cluster: prometheus-ha
          # Each Prometheus has to have unique labels.
          replica: $(POD_NAME)

      remote_write:
      - url: http://thanos-receiver.thanos-receiver.svc.cluster.local:19291/api/v1/receive
        metadata_config:
          send: false

      scrape_configs:
        # Scraper for regular Kubernetes services with HTTP metrics (excluding descheduler)
        - job_name: 'kubernetes-services'
          kubernetes_sd_configs:
            - role: endpoints
          relabel_configs:
            # Exclude the descheduler service from this scrape config
            - source_labels: [__meta_kubernetes_service_name]
              regex: descheduler
              action: drop
            # Only keep endpoints with ports named "metrics"
            - source_labels: [__meta_kubernetes_endpoint_port_name]
              regex: metrics
              action: keep
            # Extract the namespace and service name for better labels
            - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name]
              target_label: service
              separator: /
              replacement: $1/$2
            # Set instance label to the node hostname
            - source_labels: [__meta_kubernetes_pod_node_name]
              target_label: instance
            # Remove unnecessary labels
            - action: labeldrop
              regex: __meta_kubernetes.*

        # Scraper for the descheduler service using HTTPS and insecure_skip_verify
        - job_name: 'descheduler-metrics'
          kubernetes_sd_configs:
            - role: endpoints
          scheme: https
          tls_config:
            insecure_skip_verify: true
          relabel_configs:
            # Only keep the descheduler service with the "metrics" port
            - source_labels: [__meta_kubernetes_service_name]
              regex: descheduler
              action: keep
            # Extract the namespace and service name for better labels
            - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name]
              target_label: service
              separator: /
              replacement: $1/$2
            # Remove unnecessary labels
            - action: labeldrop
              regex: __meta_kubernetes.*

rbac:
  roles:
    clusterRole:
      rules:
        - apiGroups:
            - ''
          resources:
            - nodes
            - nodes/proxy
            - nodes/metrics
            - services
            - endpoints
            - pods
            - ingresses
            - configmaps
          verbs:
            - get
            - list
            - watch
        - apiGroups:
            - extensions
            - networking.k8s.io
          resources:
            - ingresses/status
            - ingresses
          verbs:
            - get
            - list
            - watch
        - apiGroups:
            - discovery.k8s.io
          resources:
            - endpointslices
          verbs:
            - get
            - list
            - watch
        - nonResourceURLs:
            - /metrics
          verbs:
            - get

ingress:
  enabled: true
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: "internalweb, internalwebsecure"
  hosts:
    - host: prometheus.openjamlab.com
      path: /
      pathType: "Prefix"
      tls:
        enabled: true
        secretName: "letsencrypt-wildcard-certificate"
      backend:
        service:
          name: "prometheus"
          port: 9090
