workload:
  replicaCount: 1
  image:
    repository: "grafana/loki"
    tag: "latest"
  resources:
    preset: "micro"
  args:
    - '-config.file=/etc/loki/config.yaml'
  storage:
    - name: config
      type: configMap
      mountPath: /etc/loki
      configMapName: loki
    - name: data
      type: emptyDir
      mountPath: /data
      sizeLimit: 5Gi
      readOnly: false
      ramDisk: false
    - name: tmp
      type: emptyDir
      mountPath: /tmp
      readOnly: false
service:
  ports:
    - name: http
      protocol: TCP
      port: 3100

autoscaling:
  enabled: false

configMap:
  enabled: true
  data:
    config.yaml: |
      auth_enabled: false

      server:
        http_listen_port: 3100
        grpc_listen_port: 9096

      common:
        instance_addr: 127.0.0.1
        path_prefix: /tmp/loki
        storage:
          filesystem:
            chunks_directory: /tmp/loki/chunks
            rules_directory: /tmp/loki/rules
        replication_factor: 1
        ring:
          kvstore:
            store: inmemory

      limits_config:
        max_cache_freshness_per_query: 10m
        reject_old_samples: true
        reject_old_samples_max_age: 168h
        split_queries_by_interval: 15m
        per_stream_rate_limit: 512M
        cardinality_limit: 200000
        ingestion_burst_size_mb: 1000
        ingestion_rate_mb: 10000

      query_range:
        results_cache:
          cache:
            embedded_cache:
              enabled: true
              max_size_mb: 100

      schema_config:
        configs:
          - from: 2024-04-01
            store: tsdb
            object_store: filesystem
            schema: v13
            index:
              prefix: index_
              period: 24h

ingress:
  enabled: true
  entryPoints:
    - internalwebsecure
    - internalweb
  port: http
  prefix: "loki"
  tls: true

redis:
  enabled: true
  replicas: 6
  shards: "'3'"
  resources:
    # -- Defines a preset configuration for resources. Either: `nano`, `micro`, `small`, `medium`, `large`, `xlarge`, `2xlarge`, `4xlarge`.
    preset: ""
    # -- Custom Resource Configuration: Define specific requests and limits. Use this when `preset` is not set.
    custom: {}
      # requests:
      #   cpu: 5m
      #   memory: 50Mi
      # limits:
      #   cpu: 10m
      #   memory: 100Mi

postgres:
  enabled: true
  replicas: 2
