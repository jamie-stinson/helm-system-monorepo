workload:
  replicaCount: 1
  image:
    repository: "grafana/loki"
    tag: "latest"
  resources:
    preset: "micro"
  args:
    - '-config.file=/etc/loki/config.yaml'
  storage:
    - name: config
      type: configMap
      mountPath: /etc/loki
      configMapName: loki
service:
  ports:
    - name: http
      protocol: TCP
      port: 3100

autoscaling:
  enabled: false

configMap:
  enabled: true
  data:
    config.yaml: |
      auth_enabled: false

      server:
        http_listen_port: 3100
        grpc_listen_port: 9096

      common:
        instance_addr: 127.0.0.1
        path_prefix: /tmp/loki
        storage:
          filesystem:
            chunks_directory: /tmp/loki/chunks
            rules_directory: /tmp/loki/rules
        replication_factor: 1
        ring:
          kvstore:
            store: inmemory

      query_range:
        results_cache:
          cache:
            embedded_cache:
              enabled: true
              max_size_mb: 100

      schema_config:
        configs:
          - from: 2024-04-01
            store: tsdb
            object_store: filesystem
            schema: v13
            index:
              prefix: index_
              period: 24h

      scrape_configs:
        - job_name: kubernetes-pods
          kubernetes_sd_configs:
          - role: pod
          relabel_configs:
          - source_labels:
            - __meta_kubernetes_pod_node_name
            target_label: __host__
          - action: drop
            regex: ^$
            source_labels:
            - __meta_kubernetes_pod_label_name
          - action: replace
            replacement: $1
            separator: /
            source_labels:
            - __meta_kubernetes_namespace
            - __meta_kubernetes_pod_label_name
            target_label: job
          - action: replace
            source_labels:
            - __meta_kubernetes_namespace
            target_label: namespace
          - action: replace
            source_labels:
            - __meta_kubernetes_pod_name
            target_label: instance
          - replacement: /var/log/pods/$1
            separator: /
            source_labels:
            - __meta_kubernetes_pod_uid
            - __meta_kubernetes_pod_container_name
            target_label: __path__
        - job_name: kubernetes-pods-app
          kubernetes_sd_configs:
          - role: pod
          relabel_configs:
          - source_labels:
            - __meta_kubernetes_pod_node_name
            target_label: __host__
          - action: drop
            regex: ^$
            source_labels:
            - __meta_kubernetes_pod_label_app
          - action: replace
            replacement: $1
            separator: /
            source_labels:
            - __meta_kubernetes_namespace
            - __meta_kubernetes_pod_label_app
            target_label: job
          - action: replace
            source_labels:
            - __meta_kubernetes_namespace
            target_label: namespace
          - action: replace
            source_labels:
            - __meta_kubernetes_pod_name
            target_label: instance
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - replacement: /var/log/pods/$1
            separator: /
            source_labels:
            - __meta_kubernetes_pod_uid
            - __meta_kubernetes_pod_container_name
            target_label: __path__

rbac:
  enabled: true
  roles:
    clusterRole:
      rules:
        - apiGroups: [""]
          resources:
          - nodes
          - nodes/proxy
          - services
          - endpoints
          - pods  
          verbs: ["get", "watch", "list"]
ingress:
  enabled: true
  entryPoints:
    - internalwebsecure
    - internalweb
  port: http
  prefix: "loki"
  tls: true
