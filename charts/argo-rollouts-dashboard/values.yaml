namespace: "argo-rollouts"
autoPatching:
  enabled: true
  annotations:
    argocd-image-updater.argoproj.io/image-list: "argo-rollouts-dashboard=quay.io/argoproj/kubectl-argo-rollouts:~v1"
workload:
  image:
    repository: quay.io/argoproj/kubectl-argo-rollouts
    tag: v1.8.3
  command:
  args:
  - 'dashboard'
  - '--loglevel=info'
  - '--kloglevel=0'
  resources:
    preset: ""
    custom:
      requests:
        cpu: "50m"
        memory: "256Mi"
        ephemeral-storage: "16Mi"
      limits:
        memory: "256Mi"
        ephemeral-storage: "16Mi"
  probes:
    readinessProbe:
      type: tcpSocket
      port: 3100
    livenessProbe:
      type: tcpSocket
      port: 3100
  strategy:
    type: "Recreate"
service:
  ports:
  - name: http
    port: 3100
    protocol: TCP
autoscaling:
  enabled: false
ingress:
  enabled: true
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: "internalweb, internalwebsecure"
  hosts:
  - host: argo-rollouts.projectwhitebox.com
    path: /
    pathType: "Prefix"
    tls:
      enabled: false
    backend:
      service:
        name: "argo-rollouts-dashboard"
        port: 3100
rbac:
  enabled: true
  roles:
    clusterRole:
      rules:
      - apiGroups:
        - argoproj.io
        resources:
        - rollouts
        - rollouts/status
        - rollouts/finalizers
        verbs:
        - get
        - list
        - watch
        - update
        - patch
      - apiGroups:
        - argoproj.io
        resources:
        - analysisruns
        - analysisruns/finalizers
        - experiments
        - experiments/finalizers
        verbs:
        - create
        - get
        - list
        - watch
      - apiGroups:
        - argoproj.io
        resources:
        - analysistemplates
        - clusteranalysistemplates
        verbs:
        - get
        - list
        - watch
      - apiGroups:
        - apps
        resources:
        - deployments
        verbs:
        - get
        - list
        - watch
        - update
        - patch
      - apiGroups:
        - apps
        resources:
        - replicasets
        verbs:
        - get
        - list
        - watch
      - apiGroups:
        - ''
        resources:
        - pods
        verbs:
        - list
        - watch
      - apiGroups:
        - ''
        resources:
        - configmaps
        verbs:
        - get
      - apiGroups:
        - coordination.k8s.io
        resources:
        - leases
        verbs:
        - create
        - get
        - update
