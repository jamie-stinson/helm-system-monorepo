namespace: "argocd"
installCRDs: true

workload:
  image:
    registry: quay.io
    repository: argoproj/kubectl-argo-rollouts
    tag: v1.8.3
  command:
    - 'dashboard'
  args:
    - '--loglevel=info'
    - '--kloglevel=0'
  probes:
    readinessProbe:
      type: tcpSocket
      port: 3100
    livenessProbe:
      type: tcpSocket
      port: 3100
  strategy:
    type: "Recreate"

service:
  ports:
    - name: http
      port: 3100
      protocol: TCP

ingress:
  enabled: true
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: "internalweb, internalwebsecure"
  hosts:
    - host: argo-rollouts.projectwhitebox.com
      path: /
      pathType: "Prefix"
      tls:
        enabled: false
      backend:
        service:
          name: "argo-rollouts-dashboard"
          port: 3100

rbac:
  enabled: true
  roles:
    clusterRole:
      rules:
        - apiGroups:
            - argoproj.io
          resources:
            - rollouts
            - rollouts/status
            - rollouts/finalizers
          verbs:
            - get
            - list
            - watch
            - update
            - patch
        - apiGroups:
            - argoproj.io
          resources:
            - analysisruns
            - analysisruns/finalizers
            - experiments
            - experiments/finalizers
          verbs:
            - create
            - get
            - list
            - watch
        - apiGroups:
            - argoproj.io
          resources:
            - analysistemplates
            - clusteranalysistemplates
          verbs:
            - get
            - list
            - watch
        - apiGroups:
            - apps
          resources:
            - deployments
          verbs:
            - get
            - list
            - watch
            - update
            - patch
        - apiGroups:
            - apps
          resources:
            - replicasets
          verbs:
            - get
            - list
            - watch
        - apiGroups:
            - ''
          resources:
            - pods
          verbs:
            - list
            - watch
        - apiGroups:
            - ''
          resources:
            - configmaps
          verbs:
            - get
        - apiGroups:
            - coordination.k8s.io
          resources:
            - leases
          verbs:
            - create
            - get
            - update
