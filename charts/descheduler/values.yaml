workload:
  image:
    registry: "registry.k8s.io"
    repository: "descheduler/descheduler"
    tag: "v0.33.0"
  command:
    - '/bin/descheduler'
  args:
    - '--v=3'
    - '--policy-config-file=/config/policy.yaml'
    - '--descheduling-interval=5m'
    - '--leader-elect=true'
    - '--leader-elect-resource-namespace=descheduler'
  priorityClassName: "system-cluster-critical"
  resources:
    preset: "nano"
  probes:
    readinessProbe:
      type: httpGet
      path: "/healthz"
      port: 10258
      scheme: "HTTPS"
    livenessProbe:
      type: httpGet
      path: "/healthz"
      port: 10258
      scheme: "HTTPS"
  storage:
    - name: config
      type: configMap
      mountPath: /config
      configMapName: descheduler
      items:
        - key: policy.yaml
          path: policy.yaml

service:
  ports:
    - name: https-metrics
      protocol: TCP
      port: 10258

configMap:
  enabled: true
  configMaps:
    - name: "descheduler"
      data:
        policy.yaml: |
          apiVersion: "descheduler/v1alpha2"
          kind: "DeschedulerPolicy"
          evictDaemonSetPods: false
          profiles:
          - name: default
            pluginConfig:
            - args:
                evictFailedBarePods: true
                evictLocalStoragePods: true
                evictSystemCriticalPods: true
                minReplicas: 0
                nodeFit: true
              name: DefaultEvictor
            - name: RemoveDuplicates
            - args:
                targetThresholds:
                  cpu: 50
                  memory: 50
                  pods: 50
                thresholds:
                  cpu: 20
                  memory: 20
                  pods: 20
              name: LowNodeUtilization
            - args:
                includingInitContainers: true
                podRestartThreshold: 100
              name: RemovePodsHavingTooManyRestarts
            - args:
                excludeOwnerKinds:
                - Job
                exitCodes:
                - 1
                includingInitContainers: true
                minPodLifetimeSeconds: 3600
              name: RemoveFailedPods
            - args:
                maxPodLifeTimeSeconds: 86400
                states:
                - Pending
                - PodInitializing
              name: PodLifeTime
            plugins:
              balance:
                enabled:
                - RemoveDuplicates
                - LowNodeUtilization
              deschedule:
                enabled:
                - RemovePodsHavingTooManyRestarts
                - RemoveFailedPods
                - PodLifeTime

rbac:
  enabled: true
  roles:
    clusterRole:
      rules:
        - apiGroups: ["events.k8s.io"]
          resources: ["events"]
          verbs: ["create", "update"]
        - apiGroups: [""]
          resources: ["nodes"]
          verbs: ["get", "watch", "list"]
        - apiGroups: [""]
          resources: ["namespaces"]
          verbs: ["get", "watch", "list"]
        - apiGroups: [""]
          resources: ["pods"]
          verbs: ["get", "watch", "list", "delete"]
        - apiGroups: [""]
          resources: ["pods/eviction"]
          verbs: ["create"]
        - apiGroups: ["scheduling.k8s.io"]
          resources: ["priorityclasses"]
          verbs: ["get", "watch", "list"]
        - apiGroups: ["policy"]
          resources: ["poddisruptionbudgets"]
          verbs: ["get", "watch", "list"]
        - apiGroups: ["coordination.k8s.io"]
          resources: ["leases"]
          verbs: ["create", "update"]
        - apiGroups: ["coordination.k8s.io"]
          resources: ["leases"]
          resourceNames: ["descheduler"]
          verbs: ["get", "patch", "delete"]
        - apiGroups: ["metrics.k8s.io"]
          resources: ["pods", "nodes"]
          verbs: ["get", "list"]
