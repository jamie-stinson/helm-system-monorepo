namespace: "prowlarr"

service:
  enabled: false

serviceAccount:
  enabled: false

workload:
  enabled: false

pdb:
  enabled: false

autoscaling:
  enabled: false

extraObjects:
  - |
    apiVersion: postgresql.cnpg.io/v1
    kind: Cluster
    metadata:
      name: prowlarr-postgres
      labels:
        kube-image-keeper.enix.io/image-caching-policy: ignore
    spec:
      backup:
        retentionPolicy: "7d"
        barmanObjectStore:
          destinationPath: "s3://postgres-backups/prowlarr"
          endpointURL: postgres-backups.minio.svc.cluster.local
          s3Credentials:
            accessKeyId:
              name: prowlarr-postgres-s3
              key: S3_ACCESS_KEY
            secretAccessKey:
              name: prowlarr-postgres-s3
              key: S3_SECRET_KEY
          wal:
            compression: gzip
          data:
            compression: gzip
      description: "Prowlarr Database"
      imageName: ghcr.io/cloudnative-pg/postgresql:17.5
      instances: 2
      inheritedMetadata:
        labels:
          kube-image-keeper.enix.io/image-caching-policy: ignore
      postgresql:
        synchronous:
          method: any
          number: 1
          dataDurability: required
      affinity:
        enablePodAntiAffinity: true
        topologyKey: kubernetes.io/hostname
        podAntiAffinityType: required
      bootstrap:
        initdb:
          database: "prowlarr-main"
          owner: prowlarr
          postInitSQL:
            - CREATE DATABASE "prowlarr-log" OWNER prowlarr
            - COMMIT
      enableSuperuserAccess: false
      storage:
        pvcTemplate:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 25Gi
          storageClassName: "openebs"
          volumeMode: Filesystem
      resources:
        requests:
          cpu: "10m"
          memory: "10Mi"
