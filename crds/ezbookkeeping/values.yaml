workload:
  enabled: false
  image:
    registry: "docker.io"
    repository: mayswind/ezbookkeeping
    tag: 0.9.0
  envsSecret:
    - name: EBK_DATABASE_USER
      secret: ezbookkeeping-postgres-app
      key: username
    - name: EBK_DATABASE_PASSWD
      secret: ezbookkeeping-postgres-app
      key: password
    - name: EBK_SECURITY_SECRET_KEY
      secret: ezbookkeeping
      key: EBK_SECURITY_SECRET_KEY
    - name: EBK_STORAGE_MINIO_ACCESS_KEY_ID
      secret: ezbookkeeping
      key: EBK_STORAGE_MINIO_ACCESS_KEY_ID
    - name: EBK_STORAGE_MINIO_SECRET_ACCESS_KEY
      secret: ezbookkeeping
      key: EBK_STORAGE_MINIO_SECRET_ACCESS_KEY
  envs:
    - name: "EBK_DATABASE_TYPE"
      value: "postgres"
    - name: "EBK_DATABASE_HOST"
      value: "ezbookkeeping-postgres-rw:5432"
    - name: "EBK_DATABASE_NAME"
      value: "ezbookkeeping"
    - name: "EBK_SERVER_DOMAIN"
      value: "ebk.projectwhitebox.com"
  probes:
    readinessProbe:
      path: "/"
      port: 8080
    livenessProbe:
      path: "/"
      port: 8080
  storage:
    - name: config
      type: configMap
      mountPath: /ezbookkeeping/conf
      configMapName: ezbookkeeping
    - name: log
      type: emptyDir
      mountPath: /ezbookkeeping/log

service:
  ports:
    - name: http
      port: 8080
      protocol: TCP

ingress:
  enabled: true
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: "internalweb, internalwebsecure"
  hosts:
    - host: ebk.projectwhitebox.com
      path: /
      pathType: "Prefix"
      tls:
        enabled: false
      backend:
        service:
          name: "ezbookkeeping"
          port: 8080

autoscaling:
  enabled: false

extraObjects:
  - |
    apiVersion: bitnami.com/v1alpha1
    kind: SealedSecret
    metadata:
      name: ezbookkeeping
      namespace: ezbookkeeping
    spec:
      encryptedData:
        EBK_SECURITY_SECRET_KEY: AgCF0Ute0r2eYhAK4BNGiy+M1F/y4tvo4cG5h3k2Z8q+9GUzZWZ6r02/BkhS/GrMmJugDCx3k5b4t2EbT41BwymjcuwRIiZjesDA9e9l0bXaTEVru3KUl2kQ5K3AeClF56K5bCcsYXBAedpfEGOoum1oMTU4UMKaKsD2Gthv1d4SIysP4TY5TcWRupTHY32CEGz4EVovjObEv1+zJgtKEEqqmfpJUtE3DL0o3KYupQk1zzGs/YKruuNjfgJjCJT79mr/xOomGl2tIY71Bs7YHySlgL0NMnFWZfhtWLcoDG7IggD8GZ/RrYYXzmQg8q+7M81qCGyVOhYPITw3aqRq5CkUxLa67NZ78Gmidz+FIZzuTkmLSv5/iKlRAVXNvZLAqTzRwJAc8X0tn0ZaDL/JP7OYHUSfZz3Q14cazcMWZAxqX9sMokiqcYGVSef/NCbfW+L8O28QH9xqyiQpM2mDH7UNQ7ZR08Anm3YuEm0MXbGl2WvdvMstL/+o9IHx3YeXrh8PmLQbaaHef3fJ91afJ8cLZ87jgjP3rcQoX+BB9OTxZ61Q/MbYsG/BRgJM7hb8+LsFVxHis1AJ7X4msc4Ztp77IdT3b9zMGoTHe1Y4378u+4DMj0qrC+0UPrCzaZKZ969HLITE8bf7XbLp66C1TdkRSF4Zq1U3csUdwlETLV3G0UWZ30dPW7Pwrw/KWugjRnF126TX9hhQ/hJOKL0DpszzlAx3439dOXrdwa9Pb/gIj9A=
        EBK_STORAGE_MINIO_ACCESS_KEY_ID: AgBJxIkxJPslHPSMxaqIgKG8mBtOd5D/NA3O2hH3y6sg6wwhCxnLECnWfSftEooK77KSRS8t8R8GcR74xthyKBR0uieolhM9ULBFhYhLJn8z8gmtld30ftAlsv+KWa34bia6Wrg6xEbn5qYC4UC3/EqyCVjD9Bk67mbV694q+WMOswqhOBS5gAXsv42xM7A8I9JMgLMNcyapGC6/sNHPMUlq3t1Jq+QlXbYFMmDuZRngvQuAa/265GAJYJWMyc2mihkv3aCtxHWTpjqA04rd0fD5YS/I8QH6AEc91FpF5f8vONKz7wRVz3KHIaMpa5lWF42EQdvvDo+AaIidURHGZPW0jl1LpLXNFFIZqJap3C/RnRBf7YD6daNHin/28YieKaX8zmMgE2BcCVtuNTJsNy2X0sd/MyjGtHcsVV3W5dzohR7F7wKK5FUA81J0Guq/Le2aKdUgXgdpWQONtWY3G3LkfiIWqKjcjzP70a2+dOZrv27oxB9w8kaLFCl5sJSRL1nFpHb1lYYgxvBj4jk/ZMbD5JSRNQJcUlTx7IfbL9CBwTmFEW5nTkP4/3x2GQlOcuspLdlqZjavM5a2Xg9Tmfwpo2S1cv320ilv0a5ID+LZkGPnS0qZi1B4yzqm8pnzFLf4/6y8x7xxynDDKfKXeVdBR5fi7qhF/HcJeAF+pWJ6WSPa44uvSmYv6L0qmUX7SFxHRyf/+o0lg0wa4RthMUxbQSOCQg==
        EBK_STORAGE_MINIO_SECRET_ACCESS_KEY: AgBMHpWFp5oZ17evzSVx+7IPeAeQEFn1ld5e9fCXLZV39BpM87TqW+lOx55JelYkBh7v88MvJHBD+DbLUIXWwNg7ZEYvTbha4cccxc2Hww8a07l9/G/ClCMtTY7rvU/YBKEuYXYbSXgGaFon2GvWkXPFf//Jq+XxUBCu/Yl1eNIZBQsRIddbBSPvEOs/oeD76llntYeuxAVRuAN46LhA+6hoLrVd6vbgBtl/8wbgjPzZexcC/27+TOCHX2G/XiJn1Y/Ifg9i205a/PsyqUppbdKdAMO+UdlegWho3zsLdB4hJOdr1c49M/dvE5759xdw47Atx79eqD0ycp7xbfbc8bLcJhBJuvIUPmdCLEx+6mEBzBTiYghNR+7v/kMKm7RB0VEYoMSedwpG2CB9F/x+2ILoN8ZMh1OZ3Q44s0wJLPRGrjuUj5PUZlY202xsMX0j1oW/8g1VTSqwNe2cKUrmY++xOWbk4e6HTZxkFKnA+kx4yDA3Tz/8G3XX6A0hKud5mayXGxx7pkkmvhF0qzJvPtQjBjlrR2tzsZ2NPbgCn7ML1V9wtOHI7VbKIAMOO5svchtPNqnNnd7uIJu0j3xi1Vdl0z9IVzRb+01kDtbXiq3rUU/9NeE+D9+38mcVSfRI3X7T9DvoIWCqBxXUyXfGHTyqIAltWbUNfyb9Y+J70AYiifBDnKNJFx3+58KXCVtxIkrkJhmepn9cbDs/ULgqkcGgwFyZEyShhdvpN1Kps+goE31rxLBKqPLx
      template:
        metadata:
          name: ezbookkeeping
          namespace: ezbookkeeping
        type: Opaque

configMap:
  enabled: true
  configMaps:
    - name: "ezbookkeeping"
      data:
        ezbookkeeping.ini: |
          [global]
          # Application instance name
          app_name = ezBookkeeping

          # Either "production", "development"
          mode = production

          [server]
          # Protocol (http, https, socket)
          protocol = http

          # The ip address to bind to, "0.0.0.0" will bind to all interfaces
          http_addr = 0.0.0.0

          # The http port to bind to
          http_port = 8080

          # The full url used to access ezBookkeeping in browser
          root_url = https://ebk.projectwhitebox.com/

          # https certification and its key file
          cert_file =
          cert_key_file =

          # Unix socket path, for "socket" protocol only
          unix_socket =

          # Static file root path (relative or absolute path)
          static_root_path = public

          # Enable GZip
          enable_gzip = false

          # Set to true to log each request and execution time
          log_request = true

          [database]
          # For "postgres" database only, Either "disable", "require" or "verify-full"
          ssl_mode = disable

          # Max idle connection number (0 - 65535, 0 means no idle connections are retained), default is 2
          max_idle_conn = 2

          # Max opened connection number (0 - 65535), default is 0 (unlimited)
          max_open_conn = 0

          # Max connection lifetime (0 - 4294967295 seconds), default is 14400 (4 hours)
          conn_max_lifetime = 14400

          # Set to true to log each sql statement and execution time
          log_query = false

          # Set to true to automatically update database structure when starting web server
          auto_update_database = true

          [mail]
          # Set to true to enable sending mail by SMTP server
          enable_smtp = false

          # SMTP Server connection configuration
          smtp_host = 127.0.0.1:25
          smtp_user =
          smtp_passwd =
          smtp_skip_tls_verify = false

          # Mail from address. This can be just an email address, or the "Name" <user@domain.com> format.
          from_address =

          [log]
          # Either "console", "file", default is "console"
          # Use space to separate multiple modes, e.g. "console file"
          mode = console file

          # Either "debug", "info", "warn", "error", default is "info"
          level = info

          # For "file" mode only, log file path (relative or absolute path)
          log_path = log/ezbookkeeping.log

          # For "file" only, request log file path (relative or absolute path). Leave blank if you want to write request log in default log file
          request_log_path =

          # For "file" only, query log file path (relative or absolute path). Leave blank if you want to write query log in default log file
          query_log_path =

          # For "file" only, whether rotate the log files
          log_file_rotate = false

          # For "file" only, maximum size (1 - 4294967295 bytes) of the log file before it gets rotated
          log_file_max_size = 104857600

          # For "file" only, maximum number of days to retain old log files. Set to 0 to retain all logs
          log_file_max_days = 7

          [storage]
          # Object storage type, supports "local_filesystem" and "minio" currently
          type = minio

          # For "minio" storage only, the minio connection configuration
          minio_endpoint = minio.minio.svc.cluster.local
          minio_location = us-west-1

          # For "minio" storage only, whether enable ssl for minio connection
          minio_use_ssl = false

          # For "minio" storage only, set to true to skip tls verification when connect minio
          minio_skip_tls_verify = false

          # For "minio" storage only, the minio bucket
          minio_bucket = ezbookkeeping

          # For "minio" storage only, the root path to store files in minio
          minio_root_path = /

          [uuid]
          # Uuid generator type, supports "internal" currently
          generator_type = internal

          # For "internal" uuid generator only, each server must have unique id (0 - 255)
          server_id = 0

          [duplicate_checker]
          # Duplicate checker type, supports "in_memory" currently
          checker_type = in_memory

          # For "in_memory" duplicate checker only, cleanup expired data interval seconds (1 - 4294967295), default is 60 (1 minutes)
          cleanup_interval = 60

          # The minimum interval seconds (0 - 4294967295) between duplicate submissions on the same page (exiting and re-entering the edit page / edit dialog is considered as a new session)
          # Set to 0 to disable duplicate checker for new data submissions, default is 300 (5 minutes)
          duplicate_submissions_interval = 300

          [cron]
          # Set to true to clean up expired tokens periodically
          enable_remove_expired_tokens = true

          # Set to true to create scheduled transactions based on the user's templates
          enable_create_scheduled_transaction = true

          [security]
          # Set to true to enable two-factor authorization
          enable_two_factor = true

          # Token expired seconds (60 - 4294967295), default is 2592000 (30 days)
          token_expired_time = 2592000

          # Token minimum refresh interval (0 - 4294967295), the value should be less than token expired time
          # Set to 0 to refresh the token every time when refreshing the front end, default is 86400 (1 day)
          token_min_refresh_interval = 86400

          # Temporary token expired seconds (60 - 4294967295), default is 300 (5 minutes)
          temporary_token_expired_time = 300

          # Email verify token expired seconds (60 - 4294967295), default is 3600 (60 minutes)
          email_verify_token_expired_time = 3600

          # Password reset token expired seconds (60 - 4294967295), default is 3600 (60 minutes)
          password_reset_token_expired_time = 3600

          # Maximum count of password / token check failures (0 - 4294967295) per IP per minute (use the above duplicate checker), default is 5, set to 0 to disable
          max_failures_per_ip_per_minute = 5

          # Maximum count of password / token check failures (0 - 4294967295) per user per minute (use the above duplicate checker), default is 5, set to 0 to disable
          max_failures_per_user_per_minute = 5

          # Add X-Request-Id header to response to track user request or error, default is true
          request_id_header = true

          [user]
          # Set to true to allow users to register account by themselves
          enable_register = true

          # Set to true to allow users to verify email address
          enable_email_verify = false

          # Set to true to require email must be verified when login
          enable_force_email_verify = false

          # Set to true to allow users to reset password
          enable_forget_password = true

          # Set to true to require email must be verified when use forget password
          forget_password_require_email_verify = false

          # Set to true to allow users to upload transaction pictures
          enable_transaction_picture = true

          # Maximum allowed transaction picture file size (1 - 4294967295 bytes)
          max_transaction_picture_size = 52428800

          # Set to true to allow users to create scheduled transaction
          enable_scheduled_transaction = true

          # User avatar provider, supports the following types:
          # "internal": Use the internal object storage to store user avatar (refer to "storage" settings), supports updating avatar by user self
          # "gravatar": https://gravatar.com
          # Leave blank if you want to disable user avatar
          avatar_provider = internal

          # For "internal" avatar provider only, maximum allowed user avatar file size (1 - 4294967295 bytes)
          max_user_avatar_size = 52428800

          # The default feature restrictions after user registration (feature types separated by commas), leave blank for no restrictions
          # Supports the following feature types:
          # 1: Update Password
          # 2: Update Email
          # 3: Update Profile Basic Info
          # 4: Update Avatar
          # 5: Logout Other Session
          # 6: Enable Two-Factor Authentication
          # 7: Disable Enable Two-Factor Authentication
          # 8: Forget Password
          # 9: Import Transactions
          # 10: Export Transactions
          # 11: Clear All Data
          default_feature_restrictions =

          [data]
          # Set to true to allow users to export their data
          enable_export = true

          # Set to true to allow users to import their data
          enable_import = true

          # Maximum allowed import file size (1 - 4294967295 bytes)
          max_import_file_size = 10485760

          [tip]
          # Set to true to display custom tips in login page
          enable_tips_in_login_page = false

          # The custom tips displayed in login page, it supports multi-language configuration
          # Add an underscore and a language tag after the setting key to configure the notification content in that language, the same below
          # For example, login_page_tips_content_zh_hans means the notification content in Chinese (Simplified)
          login_page_tips_content =

          [notification]
          # Set to true to display custom notification in home page every time users register
          enable_notification_after_register = false

          # The notification content displayed each time users register, it supports multi-language configuration
          # Add an underscore and a language tag after the setting key to configure the notification content in that language, the same below
          # For example, after_login_notification_content_zh_hans means the notification content in Chinese (Simplified)
          after_register_notification_content =

          # Set to true to display custom notification in home page every time users login
          enable_notification_after_login = false

          # The notification content displayed each time users log in, it supports multi-language configuration
          after_login_notification_content =

          # Set to true to display custom notification in home page every time users open the app
          enable_notification_after_open = false

          # The notification content displayed each time users open the app, it supports multi-language configuration
          after_open_notification_content =

          [map]
          # Map provider, supports the following types:
          # "openstreetmap": https://www.openstreetmap.org
          # "openstreetmap_humanitarian": http://map.hotosm.org
          # "opentopomap": https://opentopomap.org
          # "opnvkarte": https://publictransportmap.org
          # "cyclosm": https://www.cyclosm.org
          # "cartodb": https://carto.com/basemaps
          # "tomtom": https://www.tomtom.com
          # "tianditu": https://www.tianditu.gov.cn
          # "googlemap": https://map.google.com
          # "baidumap": https://map.baidu.com
          # "amap": https://amap.com
          # "custom": custom map tile server url
          # Leave blank if you want to disable map
          map_provider = openstreetmap

          # Set to true to use the ezbookkeeping server to forward map data requests, for "openstreetmap", "openstreetmap_humanitarian", "opentopomap", "opnvkarte", "cyclosm", "cartodb", "tomtom", "tianditu" or "custom"
          map_data_fetch_proxy = false

          # Proxy for ezbookkeeping server requesting original map data when map_data_fetch_proxy is set to true, supports "system" (use system proxy), "none" (do not use proxy), or proxy URL which starts with "http://", "https://" or "socks5://", default is "system"
          proxy = system

          # For "tomtom" map provider only, TomTom map API key, please visit https://developer.tomtom.com/how-to-get-tomtom-api-key for more information
          tomtom_map_api_key =

          # For "tianditu" map provider only, TianDiTu map application key, please visit https://console.tianditu.gov.cn/api/register for more information
          tianditu_map_app_key =

          # For "googlemap" map provider only, Google map JavaScript API key, please visit https://developers.google.com/maps/get-started for more information
          google_map_api_key =

          # For "baidumap" map provider only, Baidu map JavaScript API application key, please visit https://lbsyun.baidu.com/index.php?title=jspopular3.0/guide/getkey for more information
          baidu_map_ak =

          # For "amap" map provider only, Amap JavaScript API application key, please visit https://lbs.amap.com/api/javascript-api/guide/abc/prepare for more information
          amap_application_key =

          # For "amap" map provider only, Amap JavaScript API security verification method, supports the following methods:
          # "internal_proxy": use the internal proxy to request amap api with amap application secret (default)
          # "external_proxy": use an external proxy to request amap api (amap application secret should be set by external proxy)
          # "plain_text": append amap application secret to frontend request directly (insecurity for public network)
          # Please visit https://developer.amap.com/api/jsapi-v2/guide/abc/load for more information
          amap_security_verification_method = internal_proxy

          # For "amap" map provider only, Amap JavaScript API application secret, this setting must be provided when "amap_security_verification_method" is set to "internal_proxy" or "plain_text", please visit https://lbs.amap.com/api/javascript-api/guide/abc/prepare for more information
          amap_application_secret =

          # For "amap" map provider only, Amap JavaScript API external proxy url, this setting must be provided when "amap_security_verification_method" is set to "external_proxy"
          amap_api_external_proxy_url =

          # For "custom" map provider only, the tile layer url of custom map tile server, supports {x}, {y} (coordinates) and {z} (zoom level) placeholders, like "https://tile.openstreetmap.org/{z}/{x}/{y}.png"
          custom_map_tile_server_url =

          # For "custom" map provider only, the optional annotation layer url of custom map tile server, supports {x}, {y} (coordinates) and {z} (zoom level) placeholders
          custom_map_tile_server_annotation_url =

          # For "custom" map provider only, the min zoom level (0 - 255) for custom map tile server, default is 1
          custom_map_tile_server_min_zoom_level = 1

          # For "custom" map provider only, the max zoom level (0 - 255) for custom map tile server, default is 18
          custom_map_tile_server_max_zoom_level = 18

          # For "custom" map provider only, the default zoom level (0 - 255) for custom map tile server, default is 14
          custom_map_tile_server_default_zoom_level = 14

          [exchange_rates]
          # Exchange rates data source, supports the following types:
          # "reserve_bank_of_australia": https://www.rba.gov.au/statistics/frequency/exchange-rates.html
          # "bank_of_canada": https://www.bankofcanada.ca/rates/exchange/daily-exchange-rates/
          # "czech_national_bank": https://www.cnb.cz/en/financial-markets/foreign-exchange-market/central-bank-exchange-rate-fixing/central-bank-exchange-rate-fixing/
          # "danmarks_national_bank": https://www.nationalbanken.dk/en/what-we-do/stable-prices-monetary-policy-and-the-danish-economy/exchange-rates
          # "euro_central_bank": https://www.ecb.europa.eu/stats/policy_and_exchange_rates/euro_reference_exchange_rates/html/index.en.html
          # "national_bank_of_georgia": https://nbg.gov.ge/en/monetary-policy/currency
          # "central_bank_of_hungary": https://www.mnb.hu/en/arfolyamok
          # "bank_of_israel": https://www.boi.org.il/en/economic-roles/financial-markets/exchange-rates/
          # "central_bank_of_myanmar": https://forex.cbm.gov.mm/index.php/fxrate
          # "norges_bank": https://www.norges-bank.no/en/topics/Statistics/exchange_rates/
          # "national_bank_of_poland": https://nbp.pl/en/statistic-and-financial-reporting/rates/
          # "national_bank_of_romania": https://www.bnr.ro/Exchange-rates-1224.aspx
          # "bank_of_russia": https://www.cbr.ru/eng/currency_base/daily/
          # "swiss_national_bank": https://www.snb.ch/en/the-snb/mandates-goals/statistics/statistics-pub/current_interest_exchange_rates
          # "national_bank_of_ukraine": https://bank.gov.ua/ua/markets/exchangerates
          # "central_bank_of_uzbekistan": https://cbu.uz/en/arkhiv-kursov-valyut/
          # "international_monetary_fund": https://www.imf.org/external/np/fin/data/param_rms_mth.aspx
          # "user_custom": users set their own exchange rates data in the UI
          data_source = euro_central_bank

          # Requesting exchange rates data timeout (0 - 4294967295 milliseconds)
          # Set to 0 to disable timeout for requesting exchange rates data, default is 10000 (10 seconds)
          request_timeout = 10000

          # Proxy for ezbookkeeping server requesting exchange rates data, supports "system" (use system proxy), "none" (do not use proxy), or proxy URL which starts with "http://", "https://" or "socks5://", default is "system"
          proxy = system

          # Set to true to skip tls verification when request exchange rates data
          skip_tls_verify = false
